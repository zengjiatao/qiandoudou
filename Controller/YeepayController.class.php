<?php# 银钱包对接接口 - 微信api接口namespace Payapi\Controller;use Think\Controller;class YeepayController extends Controller{    //商户进件并设置费率    public function BusinessRegConfig($user_id,$user_pay_supply_id)    {        $registercode=$this->BusinessRegister($user_id);        if($registercode=="0000") //商户进件成功        {            $configcode=$this->BusinessConfig($user_id, $user_pay_supply_id);            if($configcode=="0000")  //商户费率设置成功            {                $data['code']=$configcode;                $data['msg']="开通成功";                return $data;            }else {                $where['user_id']=array('eq',$user_id);                //         $where['state']=array('eq',1);                $smartcard_user=M('smartcard_open')->where($where)->find();                $data['code']=$configcode;                $data['msg']=$smartcard_user['message'];                return $data;            }                    }else //商户进件失败        {            $whereuser['user_id']=array('eq',$user_id);            $userBusiness=M('smartcard_user')->where($whereuser)->find();            $data['code']=$registercode;            $data['msg']=$userBusiness['message'];            return $data;        }    }    //商户进件    public function BusinessRegister($user_id)    {                $whereuser['user_id']=array('eq',$user_id);        $has=M('smartcard_user')->where($whereuser)->find();        if($has)        {            if($has['state']==1)            {//                 echo "已开通商户";                return "0000";            }        }                $wherebank['user_id']=array('eq',$user_id);        $wherebank['is_normal']=array('eq',1);        $mybany=M('mybank')->join('LEFT JOIN y_bank  on  y_bank.bank_id=y_mybank.bank_id ')->field('y_mybank.*,y_bank.icon,y_bank.bg,y_bank.name,y_bank.hlb_bank_code,y_bank.lianhanghao')->where($wherebank)->find();                if(!$mybany)        {            //          goback("请先绑定默认结算卡！");            return '1111';        }                $wherebank_children['bank_children_id']=array('eq',$mybany['bank_children_id']);                $bank_children=M('bank_children')->where($wherebank_children)->find();                $whereProvince['provid']=array('eq',$mybany['province_id']);                $settleSubProvince=M('province')->where($whereProvince)->find();                $whereCity['cityid']=array('eq',$mybany['city_id']);                $settleSubCity=M('city')->where($whereCity)->find();                $wherearea['areaid']=array('eq',$mybany['area_id']);                $settleSubarea=M('area')->where($wherearea)->find();                        import('Vendor.yeepaySkbSdk.yeepaySkbSdk');        $Cspay= new \yeepaySkbSdk();                $url="register.action";        $config = C('YEEPAY');               $data=array(            'mainCustomerNumber'=>$config['parentId'],            //'loginPassword'=>$this->encrypt("abc123456"), #登陆密码            //'tradePassword'=>$this->encrypt("abc123"), #交易密码            'requestId'=>"YIBAO".time(), #注册流水号           'bindMobile'=>$mybany['mobile'], #绑定的手机号           'signedName'=>$mybany['nickname'], #商户签约名： 在注册商户类型为个人用户时,保证 签约名和开户名一样; 在注册商户类型为企业、个体工商户 时,签约名传企业名称全称           'linkMan'=>$mybany['nickname'], #推荐人姓名           'idCard'=>$mybany['idcard'], #商户法人身份证号,同一个身份证号，只能在一个大商户下注册一个账号           'legalPerson'=>$mybany['nickname'],  #商户的法人姓名           'bankAccountNumber'=>$mybany['cart'],           'bankName'=>str_replace('中国','',$mybany['name']), #工商银行、农业银行、招商银行、建设银行、交通银行、中信银行、光大银行、北京银行、深圳发展银行 、中国银行、兴业银行、民生银行           'accountName'=>$mybany['nickname'], #开户名           'areaCode'=>$settleSubarea['adcode'], #商户所在地区,请根据【银联 32 域码 表 0317.xls-来自易宝】,填写编码           'BankCardPhoto'=>"Uploads/".$mybany['cart_img'], #银行卡正面照           'idCardPhoto'=>"Uploads/".$mybany['cart_img'], #身份证正面照           'idCardBackPhoto'=>"Uploads/".$mybany['cart_img'], #身份证背面照           'PersonPhoto'=>"Uploads/".$mybany['cart_img'], #银行卡与身份证及本人上半身合照        );       var_dump($Cspay->BusinessRegister($data));//         echo $Cspay->BusinessRegister($data);                  //         $Cspay->reg();                return;                $config = C('YEEPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $name=$mybany['nickname']; //结算账户开户名        $certNo=$mybany['idcard']; //身份证号        $mobile=$mybany['mobile']; //结算账户绑定手机号        $provinceName=$settleSubProvince['province'];         $cityName=$settleSubCity['city'];        $district=$settleSubarea['area'];        $address=$settleSubProvince['province'].$settleSubCity['city'].$settleSubarea['area'];        $bankName=$mybany['name']; //结算卡开户行        $bank_provinceName=$settleSubProvince['province'];         $bank_cityName=$settleSubCity['city'];        $subBranchName=$bank_children['name']; //结算卡开户支行        $unitedBankNumber=$bank_children['line']; //联行号        $accountNumber=$mybany['cart']; //结算卡号        $beneficiaryName=$mybany['nickname']; //结算账户开户名        $beneficiaryCertNo=$mybany['idcard']; //身份证号        $bankCardMobile=$mybany['mobile']; //结算账户绑定手机号                $result= $Cspay->BusinessRegister($merchId,$signKey,$name,$certNo,$mobile,$provinceName,$cityName,$district,$address,$bankName,$bank_provinceName,$bank_cityName,$subBranchName,$unitedBankNumber,$accountNumber,$beneficiaryName,$beneficiaryCertNo,$bankCardMobile);                             $data['agentNo']=$config['merchId']; //机构号                $data['merName']=$mybany['nickname']."个体商户"; //商户名称                $data['merAddr']=$address; //商户地址                $data['settleName']=$mybany['nickname']; //结算账户开户名                $data['settleIdCard']=$mybany['idcard']; //身份证号                $data['settlePhone']=$mybany['mobile']; //结算账户绑定手机号                $data['settleBank']=$mybany['name']; //结算卡开户行                        $data['settleBankNo']=$mybany['hlb_bank_code']; //开户行简码                $data['settleAccount']=$mybany['cart']; //结算卡号                $data['settleBankSub']=$bank_children['name']; //结算卡开户支行                $data['settleBankBranch']=$bank_children['line']; //联行号                $data['settleSubProvince']=$settleSubProvince['province'];    //$mybany['lianhang']; //开户省份        $data['settleSubCity']=$settleSubCity['city'];    //$mybany['lianhang']; //结算卡开户市                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_BusinessRegister_Return__",$nowtime.'--------请求参数--------'.implode(',',$data).'----回调返回信息参数----'.$result.'----'));                $msg=json_decode($result);                $data['user_id']=$user_id;        $data['addtime']=time();        $data['merKey']=$config['signKey'];                $returncode="0000";                if($msg->code=='1010')        {            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['merNo']=$msg->data;            $data['state']=1;                    }else         {            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['state']=2;            $returncode="2222";        }                $whereuser['user_id']=array('eq',$user_id);        $has=M('smartcard_user')->where($whereuser)->find();        if(!$has)        {            M('smartcard_user')->add($data);        }else {            M('smartcard_user')->where($whereuser)->save($data);        }                return $returncode;    }        //设置商户费率    public function BusinessConfig($user_id,$user_pay_supply_id)    {                $where['user_id']=array('eq',$user_id);//         $where['state']=array('eq',1);                $smartcard_user=M('smartcard_open')->where($where)->find();        if($smartcard_user['state']=='1')        {            return '0000';        }                $wherepay['user_pay_supply_id']=$user_pay_supply_id;        $paysupp=M('user_pay_supply')->where($wherepay)->JOIN('LEFT JOIN y_user_js_supply on y_user_js_supply.user_js_supply_id=y_user_pay_supply.user_js_supply_id')->field('y_user_pay_supply.yy_rate as pyy_rate,y_user_js_supply.yy_rate as ryy_rate')->find();                $smartcard_user=M('smartcard_user')->where($where)->find();        $data['agentNo']=$smartcard_user['agentNo'];        $data['merNo']=$smartcard_user['merNo'];                        import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$smartcard_user['agentNo'];        $signKey=$smartcard_user['merKey'];        $mchId=$smartcard_user['merNo'];                $cred_rate=$paysupp['pyy_rate']/1000;//         $cred_fixedFee="0";//         $cred_minFee="0";//         $cred_maxFee="999999999";//         $payment_rate="0";        $payment_fixedFee=$paysupp['ryy_rate'];//         $payment_minFee="0";//         $payment_maxFee="999999999";        $tranId='CSLSH'.date('YmdHis'.mt_rand(1000,9999));        $data['smartcard_user_id']=$smartcard_user['smartcard_user_id'];        $data['user_id']=$user_id;        $data['service']=$cred_rate;        $data['lservice']=$payment_fixedFee;        $data['out_trade_no']=$tranId;                      $result= $Cspay->BusinessConfig($merchId,$signKey,$mchId,$cred_rate,$payment_fixedFee,$tranId);               $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_BusinessRegister_Return__",$nowtime.'--------请求参数--------'.implode(',',$data).'----回调返回信息参数----'.$result.'----'));        //         var_dump($result);                $msg=json_decode($result);                $returncode="0000";                if($msg->code=='2018')        {            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['state']=1;            $returncode="0000";        }else        {            //   echo $msg->message;            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['state']=2;            $returncode="2222";            return $this->UpdBFee($user_id,$user_pay_supply_id);        }                $data['smartcard_user_id']=$smartcard_user['smartcard_user_id'];                $data['user_id']=$user_id;        $data['addtime']=time();                        $whereuser['user_id']=array('eq',$user_id);        $has=M('smartcard_open')->where($whereuser)->find();        if(!$has)        {            M('smartcard_open')->add($data);        }else {            M('smartcard_open')->where($whereuser)->save($data);        }        //         echo $returncode;        return $returncode;                           }        //更新商户费率    public function UpdBFee($user_id,$user_pay_supply_id)    {                $where['user_id']=array('eq',$user_id);        //         $where['state']=array('eq',1);                $smartcard_user=M('smartcard_open')->where($where)->find();        /* if($smartcard_user['state']=='1')        {            return '0000';        } */                $wherepay['user_pay_supply_id']=$user_pay_supply_id;        $paysupp=M('user_pay_supply')->where($wherepay)->JOIN('LEFT JOIN y_user_js_supply on y_user_js_supply.user_js_supply_id=y_user_pay_supply.user_js_supply_id')->field('y_user_pay_supply.yy_rate as pyy_rate,y_user_js_supply.yy_rate as ryy_rate')->find();                $smartcard_user=M('smartcard_user')->where($where)->find();        $data['agentNo']=$smartcard_user['agentNo'];        $data['merNo']=$smartcard_user['merNo'];                        import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$smartcard_user['agentNo'];        $signKey=$smartcard_user['merKey'];        $mchId=$smartcard_user['merNo'];                $cred_rate=$paysupp['pyy_rate']/1000;        //         $cred_fixedFee="0";        //         $cred_minFee="0";        //         $cred_maxFee="999999999";        //         $payment_rate="0";        $payment_fixedFee=$paysupp['ryy_rate'];        //         $payment_minFee="0";        //         $payment_maxFee="999999999";        $tranId='CSLSH'.date('YmdHis'.mt_rand(1000,9999));                $data['smartcard_user_id']=$smartcard_user['smartcard_user_id'];        $data['user_id']=$user_id;        $data['service']=$cred_rate;        $data['lservice']=$payment_fixedFee;        $data['out_trade_no']=$tranId;                        $result= $Cspay->UpdBFee($merchId,$signKey,$mchId,$cred_rate,$payment_fixedFee,$tranId);                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_UpdBFee_Return__",$nowtime.'--------请求参数--------'.implode(',',$data).'----回调返回信息参数----'.$result.'----'));                //         var_dump($result);                $msg=json_decode($result);                $returncode="0000";                if($msg->resultCode=='SUCCESS')        {            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['state']=1;            $returncode="0000";        }else        {            //   echo $msg->message;            $data['respCode']=$msg->code;            $data['message']=$msg->msg;            $data['state']=2;            $returncode="2222";        }                $data['smartcard_user_id']=$smartcard_user['smartcard_user_id'];                $data['user_id']=$user_id;        $data['addtime']=time();                        $whereuser['user_id']=array('eq',$user_id);        $has=M('smartcard_open')->where($whereuser)->find();        if(!$has)        {            M('smartcard_open')->add($data);        }else {            M('smartcard_open')->where($whereuser)->save($data);        }                //         echo $returncode;        return $returncode;                            }        //查询商户信息    public function selectBusiness($user_id)    {        $where['user_id']=array('eq',$user_id);        $where['state']=array('eq',1);        $smartcard_user=M('smartcard_user')->where($where)->find();        $data['agentNo']=$smartcard_user['agentNo'];        $data['merNo']=$smartcard_user['merNo'];                import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo'];                $result=  $Cspay->selectBusiness($merchId,$signKey,$mchId);        echo $result;    }        //快捷交易 $repayment_plan_id:计划执行id    public function FastPay($repayment_plan_id,$user_id){                               $wheres['user_id']=array('eq',$user_id);        $wheres['state']=array('eq',1);        $smartcard_user=M('smartcard_user')->where($wheres)->find();                $where['repayment_plan_id']=array('eq',$repayment_plan_id);                $repayment_plan=M('repayment_plan')->where($where)->find();                        if($repayment_plan['state']!=2){                        $returncode='1111';            return $returncode;        }                $datau['state']=3;  //更新订单为正在处理状态，以免二次访问                $updateorder=M('repayment_plan')->where($where)->save($datau);                        $wherebank['cart']=array('eq',$repayment_plan['accNo']);        $mybank=M('mybank')->join('LEFT JOIN y_bank  on  y_bank.bank_id=y_mybank.bank_id ')->field('y_mybank.*,y_bank.icon,y_bank.bg,y_bank.name')->where($wherebank)->find();                $url='http://'.$_SERVER['SERVER_NAME'];                import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo']; //商户号                $orderId=$repayment_plan['out_trade_no'];        $totalAmount=$repayment_plan['amount'];        $title='智能还款';        $body='智能还款';        $attach=$smartcard_user['merAddr'];         $notifyUrl=$url."/index.php/Payapi/Gspay/paynotify";        $bankCardNo=$repayment_plan['accNo']; //信用卡号        $mobile=$smartcard_user['settlePhone']; //手机号        $cvv2=$repayment_plan['cvn2']; //后三位        $validThru=$repayment_plan['useTime'];                                $result=  $Cspay-> FastPay($merchId,$signKey,$mchId,$orderId,$totalAmount,$title,$body,$attach,$notifyUrl,$bankCardNo,$mobile,$cvv2,$validThru);               $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_FastPay_Return__",$nowtime.'--------请求参数--------'.implode(',',$repayment_plan).'----回调返回信息参数----'.$result.'----'));                        $msg=json_decode($result);                $returncode="0000";                if($msg->resultCode=='SUCCESS')        {            /* WAIT_PAY: 等待付款（此状态需要下  一步操作）            PAYING: 支付处理中（最终状态将通  过异步通知到合作方系统，合作方也   可调用交易查询接口查询交易状态）            FAIL:交易失败（同步返回失败不再发   送异步通知）            SUCCESS:交易成功（交易直接成功）             */            if($msg->tradeState=='SUCCESS') //支付成功            {                $returncode="0000";                $data['respCode']=$msg->tradeState;                $data['message']="支付成功";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=1;                            }else if($msg->tradeState=='WAIT_PAY') //等待付款            {                $returncode="4444";                $data['respCode']=$msg->tradeState;                $data['message']="等待付款";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=2;                            }else if($msg->tradeState=='PAYING')//支付处理中            {                return $this->FastPayOrder($orderId);                                          }else if($msg->tradeState=='FAIL') //支付失败            {                $returncode="2222";                $data['respCode']=$msg->tradeState;                $data['message']=$msg->errorCodeDes;                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=5;            }                                           }else        {            $whereuser['repayment_plan_id']=array('eq',$repayment_plan_id);            //      $whereuser['out_trade_no']=array('eq',$data['out_trade_no']);            $has=M('repayment_plan')->where($whereuser)->find();            //已经支付成功的状态            if($has['state']==1)            {                return "9999"; //已经支付成功            }            //   echo $msg->message;            $data['respCode']=$msg->errorCode;            $data['message']=$msg->errorCodeDes;            $data['state']=5;            $returncode="2222";        }                      $whereuser['repayment_plan_id']=array('eq',$repayment_plan_id);        //      $whereuser['out_trade_no']=array('eq',$data['out_trade_no']);        $has=M('repayment_plan')->where($whereuser)->find();                        if(!$has)        {            M('repayment_plan')->add($data);        }else {            M('repayment_plan')->where($whereuser)->save($data);        }                         return $returncode;        //         echo $result;    }        //查询交易订单    public function FastPayOrder($orderId)    {                $whereorder['y_repayment_plan.out_trade_no']=$orderId;        $orderuser=M('repayment_plan')->JOIN('left join y_smart_card on  y_smart_card.smart_card_id=y_repayment_plan.smart_card_id')->where($whereorder)->find();        $user_id=$orderuser['user_id'];        $wheres['user_id']=array('eq',$user_id);        $wheres['state']=array('eq',1);        $smartcard_user=M('smartcard_user')->where($wheres)->find();                import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo']; //商户号        $tranId='Select'.date('YmdHis').mt_rand(1000,9999);//         $orderId="SSPAYCS201803171149495557";                $result=  $Cspay->FastPayOrder($merchId,$signKey,$orderId,$tranId);                 $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_FastPayOrder_Return__",$nowtime.'----回调返回信息参数----'.$result.'----'));                $msg=json_decode($result);                $returncode="0000";                $whereorder['out_trade_no']=$orderId;        $order=M('repayment_plan')->where($whereorder)->find();                if(!$order)        {            return "1111"; //订单不存在        }                if($msg->resultCode=='SUCCESS')        {                        if($msg->tradeState=='SUCCESS') //支付成功            {                $returncode="0000";                $data['respCode']=$msg->tradeState;                $data['message']="支付成功";                $data['endtime']=$msg->endDate.$msg->endTime;                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                $data['state']=1;                //实际付款金额               /*  if($msg->totalAmount==sprintf("%1\$.2f",$order['amount'])*100)                {                    $data['state']=1;                }else {                    $returncode="2222";                    $data['state']=5;                    $data['message']="平台支付金额与第三方支付金额不相等";                } */                                            }else if($msg->tradeState=='WAIT_PAY') //等待付款            {                $returncode="4444";                $data['respCode']=$msg->tradeState;                $data['message']="等待付款";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=2;                            }else if($msg->tradeState=='PAYING')//支付处理中            {                $returncode="3333";                $data['respCode']=$msg->tradeState;                $data['message']="支付处理中";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=3;            }else if($msg->tradeState=='FAIL') //支付失败            {                $returncode="2222";                $data['respCode']=$msg->tradeState;                $data['message']=$msg->errorCodeDes;                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=5;            }else if($msg->tradeState=='PARTIAL_REFUND') //发生部分退款            {                $returncode="6666";                $data['respCode']=$msg->tradeState;                $data['message']="发生部分退款";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=6;            }else if($msg->tradeState=='REFUND') //已全部退款            {                $returncode="7777";                $data['respCode']=$msg->tradeState;                $data['message']="已全部退款";                if($msg->tradeId)                {                    $data['dfOrderId']=$msg->tradeId;                }                                $data['state']=7;            }                    }                $order=M('repayment_plan')->where($whereorder)->save($data);        //         echo $result;                return $returncode;            }        //查询商户余额    public function BusinessBalance($user_id)    {                $wheres['user_id']=array('eq',$user_id);        $wheres['state']=array('eq',1);        $smartcard_user=M('smartcard_user')->where($wheres)->find();          import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo']; //商户号//         $mchId="00000000000008177";        $tranId='Select'.date('YmdHis').mt_rand(1000,9999);//         $orderId="SSPAYCS201803171149495557";                $result=  $Cspay->BusinessBalance($merchId,$signKey,$mchId,$tranId);        //         echo $result;                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_BusinessBalance_Return__",$nowtime.'----回调返回信息参数----'.$result.'----'));                $msg=json_decode($result);                if($msg->resultCode=='SUCCESS')        {//             echo $msg->d0Balance/100;            return $msg->d0Balance/100;        }else {            return 0;        }                           }        //余额代付，信用卡还款    public function BusinessBalancePay($user_id,$repayment_plan_id)    {                       $url='http://'.$_SERVER['SERVER_NAME'];                $wheres['user_id']=array('eq',$user_id);        $wheres['state']=array('eq',1);                $smartcard_user=M('smartcard_user')->where($wheres)->find();                $where['repayment_plan_id']=array('eq',$repayment_plan_id);                $repayment_plan=M('repayment_plan')->where($where)->find();                if($repayment_plan['state']!=2){                        $returncode='1111';            return $returncode;        }                $datau['state']=3;  //更新订单为正在处理状态，以免二次访问                $updateorder=M('repayment_plan')->where($where)->save($datau);                $wheresmart_card['smart_card_id']=$repayment_plan['smart_card_id'];                $smart_card=M('smart_card')->join('LEFT JOIN y_mybank  on  y_smart_card.mybank_id=y_mybank.mybank_id ')->join('LEFT JOIN y_bank  on  y_mybank.bank_id=y_bank.bank_id ')->field('y_smart_card.*,y_mybank.cw_two,y_mybank.useful,y_mybank.amount,y_mybank.cart,y_mybank.nickname,y_mybank.mobile,y_bank.lianhanghao,y_mybank.idcard,y_bank.name as bname')->where($wheresmart_card)->find();                        import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo']; //商户号        $tranId='Select'.date('YmdHis').mt_rand(1000,9999);//         $orderId="SSPAYCS201803171149495557";        $orderId=$repayment_plan['out_trade_no'];                $service_charge=$repayment_plan['amount']*$repayment_plan['payRate']+$repayment_plan['settleFee'];                  $totalAmount=$repayment_plan['amount']-$service_charge;  //提现到账的金额                $returncode='0000';                if($this->BusinessBalance($user_id)<$totalAmount)        {//             echo "商户余额小于提现金额";//               return '1111';              $returncode='1111';              $data['dfRespCode']='1111';              $data['dfMessage']="商户余额小于提现金额";              $data['state']=5;        }else {                                    $notifyUrl=$url."/index.php/Payapi/Gspay/dfpaynotify";//         $notifyUrl="";        $name=$smart_card['nickname'];        $accountNo=$smart_card['cart'];        $bankName=$smart_card['bname'];        $certNo=$smart_card['idcard'];        $bankCardMobile=$smart_card['mobile'];        $headUnitedBankNo= $smart_card['lianhanghao'];                $result=  $Cspay->BusinessBalancePay($merchId,$signKey,$mchId,$orderId,$totalAmount,$notifyUrl,$name,$accountNo,$bankName,$certNo,$bankCardMobile,$headUnitedBankNo);        //         echo $result;                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_BusinessBalancePay_Return__",$nowtime.'----回调返回信息参数----'.$result.'----'));                $msg=json_decode($result);                               if($msg->resultCode=='SUCCESS')        {            /*             PAYING: 代付交易处理中（最终状态 将通过异步通知到合作方系统，合作    方也可调用代付查询接口查询代付状 态）            FAIL:代付交易失败            SUCCESS:代付交易成功             */            if($msg->tradeState=='SUCCESS')            {                $returncode='0000';                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易成功";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易成功";                $data['state']=1;                            }else if($msg->tradeState=='PAYING')            {                $returncode="3333";                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易处理中";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易处理中";                $data['state']=3;//                 return $this->PayMentOrder($orderId);                                            }else if($msg->tradeState=='FAIL')            {                $returncode="2222";                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易失败";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易失败";                $data['state']=5;            }                                }else {            $returncode="2222";            $data['dfRespCode']=$msg->errorCode;            $data['dfMessage']=$msg->errorCodeDes;            $data['dfOrderId']=$msg->orderId;            $data['message']=$msg->errorCodeDes;            $data['state']=5;        }        }                        $order=M('repayment_plan')->where($where)->save($data);              return $returncode;                                    }        //代付订单查询    public function PayMentOrder($orderId)    {                $whereorder['y_repayment_plan.out_trade_no']=$orderId;        $orderuser=M('repayment_plan')->JOIN('left join y_smart_card on  y_smart_card.smart_card_id=y_repayment_plan.smart_card_id')->where($whereorder)->find();                        $user_id=$orderuser['user_id'];                 $whereorder['y_repayment_plan.out_trade_no']=$orderId;        $orderuser=M('repayment_plan')->where($whereorder)->find();                if($orderuser['state']==1)        {            $returncode='0000';            return $returncode;        }                $wheres['user_id']=array('eq',$user_id);        $wheres['state']=array('eq',1);        $smartcard_user=M('smartcard_user')->where($wheres)->find();                import('Vendor.Cspay.Cspay');        $Cspay= new \Cspay();        $config = C('CSPAY');                $merchId=$config['merchId'];        $signKey=$config['signKey'];        $mchId=$smartcard_user['merNo']; //商户号        $tranId='Select'.date('YmdHis').mt_rand(1000,9999);    //         $orderId="SSPAYCS201803171149495557";                $result=  $Cspay->PayMentOrder($merchId,$signKey,$orderId,$tranId);                        $where['dfOrderId']=array('eq',$orderId);                $repayment_plan=M('repayment_plan')->where($where)->find();   //         echo $result;                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_PayMentOrder_Return__",$nowtime.'----回调返回信息参数----'.$result.'----'));                $msg=json_decode($result);                $returncode='0000';                if($msg->resultCode=='SUCCESS')        {            /*             PAYING: 代付交易处理中（最终状态 将通过异步通知到合作方系统，合作    方也可调用代付查询接口查询代付状 态）             FAIL:代付交易失败             SUCCESS:代付交易成功             */            if($msg->tradeState=='SUCCESS')            {                $returncode='0000';                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易成功";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易成功";                $data['state']=1;                            }else if($msg->tradeState=='PAYING')            {                $returncode="3333";                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易处理中";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易处理中";                $data['state']=3;            }else if($msg->tradeState=='FAIL')            {                $returncode="2222";                $data['dfRespCode']=$msg->tradeState;                $data['dfMessage']="代付交易失败";                $data['dfOrderId']=$msg->orderId;                $data['message']="代付交易失败";                $data['state']=5;            }                                }else {            $returncode="2222";            $data['dfRespCode']=$msg->errorCode;            $data['dfMessage']=$msg->errorCodeDes;            $data['dfOrderId']=$msg->orderId;            $data['message']=$msg->errorCodeDes;            $data['state']=5;        }                $order=M('repayment_plan')->where($where)->save($data);                                return $returncode;            }            //支付异步通知回调处理    public function paynotify()    {        //         $data=I('request.');                        $config = C('CSPAY');        $input = file_get_contents('php://input');        $key=$config['signKey'];        $fanHuiInfo = $this->decrypt($input,$key);  //aes解密                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_paynotify_Return__",$nowtime.'----回调返回信息参数----'.$fanHuiInfo.'----'));                $data=json_decode($fanHuiInfo);                if($data->orderId)        {            $this->FastPayOrder($data->orderId);        }                    }        //代付异步通知回调    public function dfpaynotify()    {        $config = C('CSPAY');        $input = file_get_contents('php://input');        $key=$config['signKey'];        $fanHuiInfo = $this->decrypt($input,$key);  //aes解密                $nowtime= date("Y-m-d h:i:s", time());        # 写入日志        R("Payapi/Api/PaySetLog",array("./PayLog","Gspay_dfpaynotify_Return__",$nowtime.'----回调返回信息参数----'.$fanHuiInfo.'----'));                $data=json_decode($fanHuiInfo);                if($data->orderId)        {            $this->PayMentOrder($data->orderId);        }                   }            /**     * 解密     * @param String input 解密的字符串     * @param String key   解密的key     * @return String     */    public function decrypt($sStr,$key) {                $decrypted= mcrypt_decrypt(MCRYPT_RIJNDAEL_128,$key,hex2bin($sStr), MCRYPT_MODE_ECB);        $dec_s = strlen($decrypted);        $padding = ord($decrypted[$dec_s-1]);        $decrypted = substr($decrypted, 0, -$padding);        return $decrypted;    }            }